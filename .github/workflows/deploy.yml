name: Spring Boot & Gradle CI/CD

on:
  push:
    branches: ["main"]
    paths:
      - "deploystudy/**"
  pull_request:
    branches: ["main"]
    paths:
      - "deploystudy/**"

permissions:
  contents: read

env:
  S3_BUCKET_NAME: deploystudy-likelion-github-action
  ZIP_FILE_NAME: deploy-package.zip
  APPLICATION_NAME: deploystudy
  DEPLOYMENT_GROUP_NAME: deploystudygroup

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Create application.yml
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" > src/main/resources/application.yml
        working-directory: ./deploystudy

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ./deploystudy

      - name: Build with Gradle
        run: ./gradlew clean build --exclude-task test
        working-directory: ./deploystudy

      - name: Create deploy directory
        run: mkdir -p deploy
        working-directory: ./deploystudy

      - name: Copy Jar file to deploy directory
        run: cp ./build/libs/*.jar ./deploy
        working-directory: ./deploystudy

      - name: Copy appspec.yml to deploy directory
        run: cp appspec.yml ./deploy
        working-directory: ./deploystudy

      - name: Copy deploy script to deploy directory
        run: cp ./scripts/*.sh ./deploy
        working-directory: ./deploystudy

      - name: Compress deploy files
        run: zip -r ./$ZIP_FILE_NAME ./deploystudy/deploy
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-southeast-2 ./$ZIP_FILE_NAME s3://$S3_BUCKET_NAME/

      - name: Deploy to AWS CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name $APPLICATION_NAME \
            --deployment-group-name $DEPLOYMENT_GROUP_NAME \
            --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$ZIP_FILE_NAME
